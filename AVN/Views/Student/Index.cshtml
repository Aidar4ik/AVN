@model StudentViaFilterVM
@{
    ViewData["Title"] = "Студенты";
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-md-5">
            <div class="form-group row mb-1">
                @* Faculty *@
                <div class="col-md-3">
                    <label class ="font-weight-bold">@Html.DisplayNameFor(x => x.FacultyId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.FacultyId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "facultiesDropdown" })
                </div>
            </div>

            <div class="form-group row mb-1">
                @* Department *@
                <div class="col-md-3">
                    <label class="font-weight-bold">@Html.DisplayNameFor(x => x.DepartmentId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.DepartmentId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "departmentsDropdown" })
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group row mb-1">
                @* Direction *@
                <div class="col-md-3">
                    <label class="font-weight-bold">@Html.DisplayNameFor(x => x.DirectionId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.DirectionId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "directionsDropdown" })
                </div>
            </div>

            <div class="form-group row mb-1">
                @* Group *@
                <div class="col-md-3">
                    <label class="font-weight-bold">@Html.DisplayNameFor(x => x.GroupId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.GroupId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "groupsDropdown" })
                </div>
            </div>
        </div>

        <div class="col-md-2">
             <button class="btn btn-success btn-block" type="submit"><span class="fa fa-filter"></span> Применить</button>
        </div>
    </div>
}


<hr>
<div id="toolbar">
    <a asp-controller="Student" asp-action="Create">
        <input type="button" class="btn btn-success" value="Добавить" />
    </a>
</div>

<div class="data-table-area mg-b-15">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="sparkline13-list">
                    <div class="sparkline13-graph">
                        <div class="datatable-dashv1-list custom-datatable-overright">
                            <table class="table-striped"
                                   id="table"
                                   data-toggle="table"
                                   data-pagination="true"
                                   data-search="true"
                                   data-show-columns="true"
                                   data-key-events="true"
                                   data-show-toggle="true"
                                   data-resizable="true"
                                   data-cookie="true"
                                   data-cookie-id-table="saveId"
                                   data-show-export="true"
                                   data-click-to-select="true"
                                   data-show-search-clear-button="true"
                                   data-filter-control="true"
                                   data-toolbar="#toolbar"
                                   data-show-refresh="true"
                                   data-show-fullscreen="true"
                                   data-show-columns-toggle-all="true"
                                   data-minimum-count-columns="2"
                                   data-show-pagination-switch="true"
                                   data-page-list="[10, 25, 50, 100, всё]"
                                   data-show-footer="true"
                                   data-locale="ru-RU">

                                <thead>
                                    <tr>
                                        <th scope="col" data-sortable="true" data-filter-control="input" data-field="FullName">
                                            ФИО
                                        </th>
                                        <th scope="col" data-sortable="true" data-filter-control="input" data-field="GroupName">
                                            Группа
                                        </th>
                                        <th scope="col" data-sortable="true" data-filter-control="input" data-field="FacultyName">
                                            Факультет
                                        </th>
                                        <th>
                                            Расписание студента
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.studentVMs)
                                    {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.FullName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Group.GroupName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Group.Direction.Department.Faculty.FacultyShortName)
                                                </td>
                                                <td>
                                                    <span> @Html.ActionLink("", "Edit", "Student", new { id = @item.Id.ToString() }, new { @class = "fa fa-edit" })</span> &emsp;
                                                    <span> @Html.ActionLink("", "Delete", "Student", new { id = @item.Id.ToString() }, new { @class = "fa fa-trash" })</span> &emsp;
                                                </td>
                                            </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetFaculties", "Faculty")',
                type: 'GET',
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, faculty) {
                        $('#facultiesDropdown').append($('<option></option>').val(faculty.value).text(faculty.text));
                    });

                    var facultyId = '@Model.FacultyId'; // Assuming FacultyId is an integer property
                    if (facultyId)
                        $('#facultiesDropdown').val(facultyId);
                    else
                        $('#facultiesDropdown').append($('<option>').text('Не выбрано').val(''));

                    FillDepartmentsDropdown(); 
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        });

        function FillDepartmentsDropdown() {
            // Your code logic here
            var facultyId = $('#facultiesDropdown').val();
            $.ajax({
                url: '@Url.Action("GetDepartmentsByFaculty", "Department")',
                type: 'GET',
                data: { facultyId: facultyId },
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, department) {
                        $('#departmentsDropdown').append($('<option></option>').val(department.value).text(department.text));
                    });

                    var departmentId = '@Model.DepartmentId';
                    $('#departmentsDropdown').val(departmentId);
                    FillDirectionsDropdown();
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        }

        function FillDirectionsDropdown() {
            // Your code logic here
            var departmentId = $('#departmentsDropdown').val();
            $.ajax({
                url: '@Url.Action("GetDirectionsByDepartment", "Direction")',
                type: 'GET',
                data: { departmentId: departmentId },
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, direction) {
                        $('#directionsDropdown').append($('<option></option>').val(direction.value).text(direction.text));
                    });

                    var directionId = '@Model.DirectionId';
                    $('#directionsDropdown').val(directionId);
                    FillGroupsDropdown();
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        }

        function FillGroupsDropdown() {
            // Your code logic here
            var directionId = $('#directionsDropdown').val();
            $.ajax({
                url: '@Url.Action("GetGroupsByDirection", "Group")',
                type: 'GET',
                data: { directionId: directionId },
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, group) {
                        $('#groupsDropdown').append($('<option></option>').val(group.value).text(group.text));
                    });
                    var groupId = '@Model.GroupId';
                    $('#groupsDropdown').val(groupId);
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        }

        $(document).ready(function () {
            $('#facultiesDropdown').change(function () {
                var facultyId = $(this).val();
                if (!facultyId) {
                    // Clear departments dropdown
                    $('#departmentsDropdown').empty();
                    $('#directionsDropdown').empty();
                    $('#groupsDropdown').empty();

                    // Add "select item" option
                    $('#departmentsDropdown').append($('<option>').text('Не выбрано').val(''));
                    $('#directionsDropdown').append($('<option>').text('Не выбрано').val(''));
                    $('#groupsDropdown').append($('<option>').text('Не выбрано').val(''));
                    return; // Exit the function
                }

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetDepartmentsByFaculty", "Department")',
                    data: { facultyId: facultyId },
                    success: function (response) {
                        // Clear previous options
                        $('#departmentsDropdown').empty();

                        // Add "select item" option
                        $('#departmentsDropdown').append($('<option>').text('Не выбрано').val(''));

                        // Add new options
                        $.each(response, function (i, department) {
                            $('#departmentsDropdown').append($('<option></option>').val(department.value).text(department.text));
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error if any
                        console.error(xhr.responseText);
                    }
                });
            });
        });

        $(document).ready(function () {
            $('#departmentsDropdown').change(function () {
                var departmentId = $(this).val();
                if (!departmentId) {
                    // Clear departments dropdown
                    $('#directionsDropdown').empty();
                    $('#groupsDropdown').empty();

                    // Add "select item" option
                    $('#directionsDropdown').append($('<option>').text('Не выбрано').val(''));
                    $('#groupsDropdown').append($('<option>').text('Не выбрано').val(''));
                    return; // Exit the function
                }

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetDirectionsByDepartment", "Direction")',
                    data: { departmentId: departmentId },
                    success: function (response) {
                        // Clear previous options
                        $('#directionsDropdown').empty();

                        // Add "select item" option
                        $('#directionsDropdown').append($('<option>').text('Не выбрано').val(''));

                        // Add new options
                        $.each(response, function (i, direction) {
                            $('#directionsDropdown').append($('<option></option>').val(direction.value).text(direction.text));
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error if any
                        console.error(xhr.responseText);
                    }
                });
            });
        });

        $(document).ready(function () {
            $('#directionsDropdown').change(function () {
                var directionId = $(this).val();

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetGroupsByDirection", "Group")',
                    data: { directionId: directionId },
                    success: function (response) {
                        // Clear previous options
                        $('#groupsDropdown').empty();

                        // Add "select item" option
                        $('#groupsDropdown').append($('<option>').text('Не выбрано').val(''));

                        // Add new options
                        $.each(response, function (i, group) {
                            $('#groupsDropdown').append($('<option></option>').val(group.value).text(group.text));
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error if any
                        console.error(xhr.responseText);
                    }
                });
            });
        });
    </script>
}
