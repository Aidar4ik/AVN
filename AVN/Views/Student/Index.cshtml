@model AVN.Models.FilterVM.StudentsFilterVM
@{
    ViewData["Title"] = "Студенты";
}

@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-md-5">
            <div class="form-group row mb-1">
               
                <div class="col-md-3">
                    <label class ="font-weight-bold">@Html.DisplayNameFor(x => x.FacultyId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.FacultyId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "facultiesDropdown" })
                </div>
            </div>

            <div class="form-group row mb-1">
                
                <div class="col-md-3">
                    <label class="font-weight-bold">@Html.DisplayNameFor(x => x.DepartmentId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.DepartmentId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "departmentsDropdown" })
                </div>
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group row mb-1">
                
                <div class="col-md-3">
                    <label class="font-weight-bold">@Html.DisplayNameFor(x => x.DirectionId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.DirectionId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "directionsDropdown" })
                </div>
            </div>

            <div class="form-group row mb-1">
                
                <div class="col-md-3">
                    <label class="font-weight-bold">@Html.DisplayNameFor(x => x.GroupId)</label>
                </div>
                <div class="col-md-9">
                    @Html.DropDownListFor(x => x.GroupId, new List<SelectListItem>(), "Не выбрано", new { @class = "form-control", id = "groupsDropdown" })
                </div>
            </div>
        </div>

@*        <div class="col-md-2">
            <button type="submit" class="btn btn-success btn-block">
                <span class="fa fa-filter"></span> Применить
            </button>
        </div>*@
            
    </div>
}

@*<section class="content">
    <div class="box">
 
        <!-- /.box-header -->
        <div class="box-body" id="dataContainer">

        </div>
        <!-- /.box-body -->
    </div>

</section>*@



<hr>
<div class="data-table-area mg-b-15" id="dataContainer">
</div>



@section Scripts {
    <script>
        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetFaculties", "Faculty")',
                type: 'GET',
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, faculty) {
                        $('#facultiesDropdown').append($('<option></option>').val(faculty.value).text(faculty.text));
                    });

                    var facultyId = '@Model.FacultyId'; // Assuming FacultyId is an integer property
                    if (facultyId)
                        $('#facultiesDropdown').val(facultyId);
                    else
                        $('#facultiesDropdown').append($('<option>').text('Не выбрано').val(''));

                    FillDepartmentsDropdown(); 
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        });

        function FillDepartmentsDropdown() {
            // Your code logic here
            var facultyId = $('#facultiesDropdown').val();
            $.ajax({
                url: '@Url.Action("GetDepartmentsByFaculty", "Department")',
                type: 'GET',
                data: { facultyId: facultyId },
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, department) {
                        $('#departmentsDropdown').append($('<option></option>').val(department.value).text(department.text));
                    });

                    var departmentId = '@Model.DepartmentId';
                    $('#departmentsDropdown').val(departmentId);
                    FillDirectionsDropdown();
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        }

        function FillDirectionsDropdown() {
            // Your code logic here
            var departmentId = $('#departmentsDropdown').val();
            $.ajax({
                url: '@Url.Action("GetDirectionsByDepartment", "Direction")',
                type: 'GET',
                data: { departmentId: departmentId },
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, direction) {
                        $('#directionsDropdown').append($('<option></option>').val(direction.value).text(direction.text));
                    });

                    var directionId = '@Model.DirectionId';
                    $('#directionsDropdown').val(directionId);
                    FillGroupsDropdown();
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        }

        function FillGroupsDropdown() {
            // Your code logic here
            var directionId = $('#directionsDropdown').val();
            $.ajax({
                url: '@Url.Action("GetGroupsByDirection", "Group")',
                type: 'GET',
                data: { directionId: directionId },
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, group) {
                        $('#groupsDropdown').append($('<option></option>').val(group.value).text(group.text));
                    });
                    var groupId = '@Model.GroupId';
                    $('#groupsDropdown').val(groupId);
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        }

        $(document).ready(function () {
            $('#facultiesDropdown').change(function () {
                var facultyId = $(this).val();
                if (!facultyId) {
                    // Clear departments dropdown
                    $('#departmentsDropdown').empty();
                    $('#directionsDropdown').empty();
                    $('#groupsDropdown').empty();

                    // Add "select item" option
                    $('#departmentsDropdown').append($('<option>').text('Не выбрано').val(''));
                    $('#directionsDropdown').append($('<option>').text('Не выбрано').val(''));
                    $('#groupsDropdown').append($('<option>').text('Не выбрано').val(''));
                    return; // Exit the function
                }

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetDepartmentsByFaculty", "Department")',
                    data: { facultyId: facultyId },
                    success: function (response) {
                        // Clear previous options
                        $('#departmentsDropdown').empty();

                        // Add "select item" option
                        $('#departmentsDropdown').append($('<option>').text('Не выбрано').val(''));

                        // Add new options
                        $.each(response, function (i, department) {
                            $('#departmentsDropdown').append($('<option></option>').val(department.value).text(department.text));
                        });
                        
                    },
                    error: function (xhr, status, error) {
                        // Handle error if any
                        console.error(xhr.responseText);
                    }
                })
                GetList()
            });
        });

        $(document).ready(function () {
            $('#departmentsDropdown').change(function () {
                var departmentId = $(this).val();
                if (!departmentId) {
                    // Clear departments dropdown
                    $('#directionsDropdown').empty();
                    $('#groupsDropdown').empty();

                    // Add "select item" option
                    $('#directionsDropdown').append($('<option>').text('Не выбрано').val(''));
                    $('#groupsDropdown').append($('<option>').text('Не выбрано').val(''));
                    return; // Exit the function
                }

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetDirectionsByDepartment", "Direction")',
                    data: { departmentId: departmentId },
                    success: function (response) {
                        // Clear previous options
                        $('#directionsDropdown').empty();

                        // Add "select item" option
                        $('#directionsDropdown').append($('<option>').text('Не выбрано').val(''));

                        // Add new options
                        $.each(response, function (i, direction) {
                            $('#directionsDropdown').append($('<option></option>').val(direction.value).text(direction.text));
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error if any
                        console.error(xhr.responseText);
                    }
                });
                GetList()
            });
        });

        $(document).ready(function () {
            $('#directionsDropdown').change(function () {
                var directionId = $(this).val();

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetGroupsByDirection", "Group")',
                    data: { directionId: directionId },
                    success: function (response) {
                        // Clear previous options
                        $('#groupsDropdown').empty();

                        // Add "select item" option
                        $('#groupsDropdown').append($('<option>').text('Не выбрано').val(''));

                        // Add new options
                        $.each(response, function (i, group) {
                            $('#groupsDropdown').append($('<option></option>').val(group.value).text(group.text));
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error if any
                        console.error(xhr.responseText);
                    }
                });
                GetList()
            });
        });

        $(document).ready(function () {
            $('#groupsDropdown').change(function () {
                GetList()
            });
        });

    </script>

    <script type="text/javascript">
        
        function GetList() {
            var facultyId = $("#facultiesDropdown").val() || 0;
            var departmentId = $("#departmentsDropdown").val();
            var directionId = $("#directionsDropdown").val();
            var groupId = $("#groupsDropdown").val();

            $.ajax({
                type: 'GET',
                url: '@Url.Action("StudentList", "Student")',
                contentType: 'application/json',
                data: { 
                    'facultyId': facultyId, 
                    'departmentId': departmentId,
                    'directionId': directionId,
                    'groupId': groupId
                },
                success: function (response) {
                    $('#dataContainer').html(response);
                    $('#studentsTbl').DataTable()
                    console.log(result)
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            })
            
        }
    </script>
}
