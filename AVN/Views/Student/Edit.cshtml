@model StudentEditVM
@using AVN.Common.Enums
@{
    ViewBag.Title = "Редактирование";
}

<div class="mb-3">
    <a href="@Url.Action(Model?.Group?.GroupType != GroupType.Students ? Model?.Group?.GroupType.ToString() : "Index")" class="btn btn-primary fas fa-arrow-alt-circle-left" type="button"> назад</a>
</div>

<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item">
        <a class="nav-link active" id="main-tab" data-toggle="tab" href="#main" role="tab" aria-controls="main"
        aria-selected="true">Основные данные</a>
  </li>
  <li class="nav-item">
        <a class="nav-link" id="history-tab" data-toggle="tab" href="#history" role="tab" aria-controls="history"
        aria-selected="false">История перемещений</a>
  </li>
</ul>
<div class="tab-content" id="myTabContent">
    
    <div class="tab-pane fade show active" id="main" role="tabpanel" aria-labelledby="main-tab">
        @using (Html.BeginForm())
        {
            <div class="container mt-3">
                <div class="row jumbotron box8">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.GroupId)
                    <div class="col-sm-12 mx-t3 mb-4">
                        <h2 class="text-center text-info">Редакция студента</h2>
                    </div>
                    @*start-first-row*@
                    <div class="col-sm-3 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.SName)</label>
                        @Html.EditorFor(x => x.SName, new { htmlAttributes = new { @class = "form-control", placeholder="Введите вашу фамилию." }})
                        @Html.ValidationMessageFor(x => x.SName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.Name)</label>
                        @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control", placeholder="Введите ваше имя." }})
                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.PName)</label>
                        @Html.EditorFor(x => x.PName, new { htmlAttributes = new { @class = "form-control", placeholder="Введите ваше отчество." }})
                        @Html.ValidationMessageFor(x => x.PName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.DateOfBirth)</label>
                        @Html.TextBoxFor(x => x.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control",@type = "date"})
                        @Html.ValidationMessageFor(x => x.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                        
                    @*end-first-row*@

                    @*start-second-row*@
                    <div class="col-sm-3 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.Gender):</label>
                        <div class="radio-buttons">
                            <div class="form-check form-check-inline">
                                <label class="form-check-label" style="margin-right: 5px;">@Gender.Male.GetShortName()</label>
                                @Html.RadioButtonFor(m => m.Gender, Gender.Male, new { @class = "form-check-input" })
                            </div>
                            <div class="form-check form-check-inline">
                                <label class="form-check-label" style="margin-right: 5px;">@Gender.Female.GetShortName()</label>
                                @Html.RadioButtonFor(m => m.Gender, Gender.Female, new { @class = "form-check-input" })
                            </div>
                            <div class="form-check form-check-inline">
                                <label class="form-check-label" style="margin-right: 5px;">@Gender.Undefined.GetShortName()</label>
                                @Html.RadioButtonFor(m => m.Gender, Gender.Undefined, new { @class = "form-check-input"})
                            </div>
                        </div>
                        @Html.ValidationMessageFor(x => x.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-4 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.Address)</label>
                        @Html.EditorFor(x => x.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите ваш адрес." }})
                        @Html.ValidationMessageFor(x => x.Address, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.Citizenship)</label>
                        @Html.DropDownListFor(x => x.Citizenship, Html.GetEnumSelectList(typeof(Citizenship)), "Не выбрано", new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.Citizenship, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.PhoneNumber)</label>
                        @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control phone", placeholder = "0(999)99-99-99" })
                        @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                    @*end-second-row*@
       
                    @*start-third-row*@
                    <div class="col-sm-2 form-group">
                        <label class ="font-weight-bold">@Html.DisplayNameFor(x => x.EducationalLine)</label>
                        @Html.DropDownListFor(x => x.EducationalLine, Html.GetEnumSelectList(typeof(EducationalLine)), "Не выбрано", new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.EducationalLine, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-2 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.RecruitmentYear)</label>
                        @Html.EditorFor(x => x.RecruitmentYear, new { htmlAttributes = new { @class = "form-control" }})
                        @Html.ValidationMessageFor(x => x.RecruitmentYear, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.GradeBookNumber)</label>
                        @Html.EditorFor(x => x.GradeBookNumber, new { htmlAttributes = new { @class = "form-control" }})
                        @Html.ValidationMessageFor(x => x.GradeBookNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-3 form-group">
                        <label class="font-weight-bold">@Html.DisplayNameFor(x => x.Status)</label>
                        @Html.DropDownListFor(x => x.Status, Html.GetEnumSelectList(typeof(StudentStatus)), "Не выбрано", new {@class = "form-control"})
                        @Html.HiddenFor(x => x.Status, new { id = "StatusHidden" })
                        @Html.ValidationMessageFor(x => x.Status, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <div class="col-sm-1">
                            <label class="font-weight-bold">@Html.DisplayNameFor(x => x.IsHasDebt)</label>
                            @Html.CheckBoxFor(x => x.IsHasDebt, new { htmlAttributes = new { @class = "form-control" }})
                            @Html.ValidationMessageFor(x => x.IsHasDebt, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*end-third-row*@

                    @*start-last-row*@
                    <div class="col-sm-4 form-group">
                        @if (Model.Status != StudentStatus.Enrollee && Model.EducationalLine != EducationalLine.Budget)
                        {
                            <a asp-controller="StudentPayment" asp-action="Index" asp-route-id="@Model.Id" class="btn btn-primary btn-m btn-block" type="button">Контракт</a>
                        }
                    </div>
                       
                </div>
            </div>
            <div class="text-right">
                <button type="submit" class="btn btn-success"> <i class="fas fa-save"></i> Сохранить изменения</button>
            </div>
        }

    </div>

    <div class="tab-pane fade" id="history" role="tabpanel" aria-labelledby="history-tab">
        <div id="movementContainer">
          
        </div>
    </div>

</div>



@section Scripts {
    <script>
        var lastTab = localStorage.getItem('lastTab');

        if (lastTab) {
            $('a[href="' + lastTab + '"]').tab('show');
        } else {
            $('a[href="#main"]').tab('show');
        }

        $('.nav-link').on('shown.bs.tab', function (e) {
            var target = $(e.target).attr("href");
            localStorage.setItem('lastTab', target);

            switch (target) {
                case "#history":
                    var studentId = '@Model.Id';
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("StudentMovementList", "Student")',
                        data: { studentId: studentId },
                        success: function (response) {
                            $('#movementContainer').html(response);
                            $('#movementTable').DataTable()
                        },
                        error: function (xhr, status, error) {
                            alert(xhr.responseText);
                        }
                    })
                    break;

                default:
                    // Default action
                    break;
            }
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".phone").mask("0(999)99-99-99");
        });
    </script>
}