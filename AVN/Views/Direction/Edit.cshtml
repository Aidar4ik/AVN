@model DirectionVM

@{
    ViewBag.Title = "Редактирование";
}

@using (Html.BeginForm())
{
    <div class="container py-3">
        <div class="row">
            <div class="col-md-12">
                <h2 class="text-center mb-2">Редактирование специальностей</h2>
                <hr class="mb-4">

                <div class="row justify-content-center">
                    <div class="col-md-6">
                        <span class="anchor" id="formPayment"></span>
                        <div class="card card-outline-secondary">
                            <div class="card-body">
                                <h3 class="text-center">Форма редактирования</h3>
                                <hr>
                                <form autocomplete="off" class="form" role="form">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.DirectionName)</label>
                                        @Html.EditorFor(x => x.DirectionName, new { htmlAttributes = new { @class = "form-control" }})
                                        @Html.ValidationMessageFor(x => x.DirectionName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.DirectionShortName)</label>
                                        @Html.EditorFor(x => x.DirectionShortName, new { htmlAttributes = new { @class = "form-control" }})
                                        @Html.ValidationMessageFor(x => x.DirectionShortName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.AcademicDegree)*</label>
                                        @Html.DropDownListFor(x => x.AcademicDegree, Html.GetEnumSelectList(typeof(AcademicDegree)), "Не выбрано", new {@class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.AcademicDegree, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.TrainingPeriod)*</label>
                                        @Html.DropDownListFor(x => x.TrainingPeriod, Html.GetEnumSelectList(typeof(TrainingPeriod)), "Не выбрано", new {@class = "form-control"})
                                        @Html.ValidationMessageFor(x => x.TrainingPeriod, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.FacultyId)</label>
                                        @Html.DropDownListFor(x => x.FacultyId, new List<SelectListItem>(), new { @class = "form-control", id = "facultiesDropdown" })
                                        @Html.ValidationMessageFor(x => x.FacultyId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.DepartmentId)</label>
                                        @Html.DropDownListFor(x => x.DepartmentId, new List<SelectListItem>(), new { @class = "form-control", id = "departmentsDropdown" })
                                        @Html.ValidationMessageFor(x => x.DepartmentId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.DirectionNumber)</label>
                                        @Html.EditorFor(x => x.DirectionNumber, new { htmlAttributes = new { @class = "form-control" }})
                                        @Html.ValidationMessageFor(x => x.DirectionNumber, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.CreditCost)</label>
                                        @Html.TextBoxFor(x => x.CreditCost, new { @class = "form-control", style = "width: 150px;" })
                                        @Html.ValidationMessageFor(x => x.CreditCost, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>@Html.DisplayNameFor(x => x.Description)</label>
                                        @Html.TextAreaFor(x => x.Description, new { @class = "form-control", rows = "8"})
                                        @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                                    </div>
                                    <hr>
                                    <div class="form-group row">
                                        <div class="col-md-6">
                                            <a href="/Direction/Index" class="btn btn-secondary btn-lg btn-block" type="button">Отмена</a>
                                        </div>
                                        <div class="col-md-6">
                                            <button class="btn btn-success btn-lg btn-block" type="submit">Сохранить</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div><!-- /form card cc payment -->
                    </div>
                </div><!--/row-->
            </div><!--/col-->
        </div><!--/row-->
    </div>

    <!--/container-->
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $.ajax({
                url: '@Url.Action("GetFaculties", "Faculty")',
                type: 'GET',
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, faculty) {
                        $('#facultiesDropdown').append($('<option></option>').val(faculty.value).text(faculty.text));
                    });

                    var facultyId = '@Model.FacultyId'; // Assuming FacultyId is an integer property
                    $('#facultiesDropdown').val(facultyId);
                    FillDepartmentsDropdown();
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        });

        function FillDepartmentsDropdown() {
            // Your code logic here
            var facultyId = $('#facultiesDropdown').val();
            $.ajax({
                url: '@Url.Action("GetDepartmentsByFaculty", "Department")',
                type: 'GET',
                data: { facultyId: facultyId },
                success: function (data) {
                    // Add new options
                    $.each(data, function (i, department) {
                        $('#departmentsDropdown').append($('<option></option>').val(department.value).text(department.text));
                    });

                    var departmentId = '@Model.DepartmentId'; // Assuming FacultyId is an integer property
                    $('#departmentsDropdown').val(departmentId);
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.error(xhr.responseText);
                }
            });
        }

        $(document).ready(function () {
            $('#facultiesDropdown').change(function () {
                var facultyId = $(this).val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetDepartmentsByFaculty", "Department")',
                    data: { facultyId: facultyId },
                    success: function (response) {
                        // Clear previous options
                        $('#departmentsDropdown').empty();

                        //// Add "select item" option
                        $('#departmentsDropdown').append($('<option>').text('Не выбрано').val(''));

                        // Add new options
                        $.each(response, function (i, department) {
                            $('#departmentsDropdown').append($('<option></option>').val(department.value).text(department.text));
                        });
                    },
                    error: function (xhr, status, error) {
                        // Handle error if any
                        console.error(xhr.responseText);
                    }
                });
            });
        });
    </script>
}